clear; clc; clf;
delete(findall(0,'Type','figure'))

%% Generating the WS complex network
% Ab,Ba,Cal,Cam,Em,Fr,La,Li,Lo,Ma,Mo,PAB,PAT,Pi,Pu,Sa,Si,To,Um,VA,Ve
k_measure = [38 12 10 14 90 40 ...
    19 86 104 56 23 66 ...
    99 88 18 13 9 45 24 110 65]; 
m = 18; 
K = length(k_measure);

% P = zeros(1,K);
% for k = 1:K
%     P(k) = m^(k_measure(k)-m)/factorial(k_measure(k)-m)*exp(-m);
% end
% for k = m:20
%     Q(k) = m^(k-m)/factorial(k-m)*exp(-m);
% end
% 
% figure
% subplot(2,1,1)
% plot(k_measure, P, 'color',[0.2 0.5 0.9],'LineWidth',2); hold on;
% set(gca,'FontSize',14);
% title('Watts-Strogatz Discrete Network');
% xlabel('Connectivity measure','FontSize',14);
% ylabel('Probability distribution','FontSize',14);
% grid on; hold off;
% 
% subplot(2,1,2)
% plot(Q, 'color',[0.9 0.5 0.2],'LineWidth',2); hold on;
% set(gca,'FontSize',14);
% title('Watts-Strogatz Full Plot');
% xlabel('Connectivity measure','FontSize',14);
% ylabel('Probability distribution','FontSize',14);
% grid on; hold off;

%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: /Users/leonardo/Google Drive/PhD/MATLAB/Research/dpc_regioni.csv
%
% Auto-generated by MATLAB on 16-Aug-2020 16:02:02

% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 21);

% Specify range and delimiter
opts.DataLines = [2, Inf];
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["Var1", "Var2", "Var3", "Var4", "Var5", "Var6", "ricoverati_con_sintomi", "terapia_intensiva", "totale_ospedalizzati", "isolamento_domiciliare", "totale_positivi", "variazione_totale_positivi", "nuovi_positivi", "dimessi_guariti", "deceduti", "casi_da_sospetto_diagnostico", "casi_da_screening", "totale_casi", "tamponi", "casi_testati", "Var21"];
opts.SelectedVariableNames = ["ricoverati_con_sintomi", "terapia_intensiva", "totale_ospedalizzati", "isolamento_domiciliare", "totale_positivi", "variazione_totale_positivi", "nuovi_positivi", "dimessi_guariti", "deceduti", "casi_da_sospetto_diagnostico", "casi_da_screening", "totale_casi", "tamponi", "casi_testati"];
opts.VariableTypes = ["string", "string", "string", "string", "string", "string", "double", "double", "double", "double", "double", "double", "double", "double", "double", "string", "string", "double", "double", "string", "string"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, ["Var1", "Var2", "Var3", "Var4", "Var5", "Var6", "casi_da_sospetto_diagnostico", "casi_da_screening", "casi_testati", "Var21"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["Var1", "Var2", "Var3", "Var4", "Var5", "Var6", "casi_da_sospetto_diagnostico", "casi_da_screening", "casi_testati", "Var21"], "EmptyFieldRule", "auto");

% Import the data
dpcregioni = readtable("/Users/leonardo/Google Drive/PhD/MATLAB/Research/dpc_regioni.csv", opts);

% Clear temporary variables
clear opts


%% Data per region
symptomatic_hospitalized = zeros(21,187);
asymptomatic_isolated = zeros(21,187);
new_infected = zeros(21,187);

cumulative_infected = zeros(21,187);
cumulative_recovered = zeros(21,187);
cumulative_deaths = zeros(21,187);
for k = 1:21
    symptomatic_hospitalized(k,:) = table2array(dpcregioni(k:21:3907+k,3));
    asymptomatic_isolated(k,:) = table2array(dpcregioni(k:21:3907+k,4));
    new_infected(k,:) = table2array(dpcregioni(k:21:3907+k,7));
    
    cumulative_infected(k,:) = table2array(dpcregioni(k:21:3907+k,12));
    cumulative_recovered(k,:) = table2array(dpcregioni(k:21:3907+k,7));
    cumulative_deaths(k,:) = table2array(dpcregioni(k:21:3907+k,8));
end

%%  Parameters
% setting general parameters for simulations
T = 240; dt = 1; % time horizon & time step 220 days is until 30 September
gamma = 0.499522798579201676; lambda = 0.59952; % gamma and lambda in SAIR
sigma = 0.05050505235642550742; mu = 0.1504; % sigma and mu in SAIR
alpha = 0.03351722405987804617;% alpha in SAIR

%k1 = [0.995020971104487523 .92]; k2 = [0.7505631974143128 .32];

%R0 = (k1*g*m+k2*l*a)/((s+a)*m) % about 2.38

N = 60*10^6;

% Population:
% Ab,Ba,Cal,Cam,Em,Fr,La,Li,Lo,Ma,Mo,PAB,PAT,Pi,Pu,Sa,Si,To,Um,VA,Ve
k_classes = [0.022 0.009 0.032 0.096 0.073 0.02 0.098 0.026 0.166 0.025 0.005 0.009 0.009 0.072 0.068 0.027 0.083 0.062 0.015 0.002 0.081];
K = length(k_classes);
k_c = [0.022 0.009 0.032 0.096 0.073 0.02 0.098 0.026 0.166 0.025 0.005 0.009 0.009 0.072 0.068 0.027 0.083 0.062 0.015 0.002 0.081]';
regions = {'Abruzzo','Basilicata','Calabria','Campania','Emilia-Romagna','Friuli Venezia Giulia', ...
    'Lazio','Liguria','Lombardia','Marche','Molise','P.A. Bolzano','P.A. Trento', 'Piemonte', ...
    'Puglia','Sardegna','Sicilia','Toscana','Umbria',"Valle d'Aosta",'Veneto'}';

figure
hB=bar(k_c); grid on;
% hAx=gca;            % get a variable for the current axes handle
% hAx.XTickLabel=regions; % label the ticks
% hT=[];
%set(gca,'xticklabel',regions)
%xtickangle(45);
% for i=1:length(hB)  % iterate over number of bar objects
%   hT=[hT text(hB(i).XData+hB(i).XOffset,hB(i).YData,num2str(hB(i).YData.','%.3f'), ...
%                           'VerticalAlignment','bottom','horizontalalign','center')];
% end

psi_1 = k_measure./150;%[0.05 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.6 0.7];
psi_2 = (k_measure./150)*0.5;

%psi_1 = ones(K).*.99;%[0.62 0.35 0.35 0.42 0.97 0.60 0.58 0.98 0.99 0.58 0.55 0.56 0.56 0.92 0.61 0.64 0.83 0.62 0.55 0.65 0.98];
%psi_2 = psi_1.*0.6;%[0.022*7 0.009*7 0.032*7 0.096*7 0.85 0.02*7 0.098*7 0.65 0.95 0.5 0.005*7 0.009*7 0.009*7 0.072*7 0.068*7 0.027*7 0.083*7 0.062*7 0.015*7 0.002*7 0.081*7];

mm = 0.8;
R0 = zeros(k,T);

%% DYNAMICS
S = zeros(K,T); A = zeros(K,T); I = zeros(K,T); R = zeros(K,T);
dS = zeros(K,T); dA = zeros(K,T); dI = zeros(K,T); dR = zeros(K,T);
dDR = zeros(K,T); % increment of diagnosed removed
Atot = zeros(K,T); Atot_strict = zeros(1,T);%Atot(1,1) = A(1,1); Atot(2,1) = A(2,1);
Itot = zeros(K,T); Itot_strict = zeros(1,T);%Itot(1,1) = I(1,1); Itot(2,1) = I(2,1);
%f = sigma.*ones(T,2);
for k=1:K    
    A(k,1) = asymptomatic_isolated(k,1)/(N*k_classes(k));
    I(k,1) = symptomatic_hospitalized(k,1)/(N*k_classes(k));
    %R(k,1) = (cumulative_deaths(k,160)/(N*k_classes(k))-cumulative_deaths(k,159)/(N*k_classes(k)))+(cumulative_recovered(k,160)/(N*k_classes(k))-cumulative_recovered(k,159)/(N*k_classes(k)));
    S(k,1) = 1 - A(k,1) - I(k,1) - R(k,1);
    Atot(k,1) = A(k,1); 
    Itot(k,1) = I(k,1); 
    R0(k,1) = (psi_1(k)*gamma*mu+psi_2(k)*lambda*alpha)/(mm*((sigma+alpha)*mu));
end
Atot_strict(1) = A(4,1); Itot_strict(1) = I(4,1);

% initialising theta_1 and theta_2
theta_1 = zeros(1,T); theta_2 = zeros(1,T);
for k = 1:K
        Pk = k_measure(k)*k_classes(k);
    
        theta_1(1) = theta_1(1) + Pk*A(k,1);
        theta_2(1) = theta_2(1) + Pk*I(k,1);
end
theta_1(1) = theta_1(1)/(2*m);
theta_2(1) = theta_2(1)/(2*m);


for t = 2:T
    
    if t > 10 && t < 50
        psi_1 = psi_1 - psi_1*0.04940; 
        psi_2 = psi_2 - psi_2*0.1180;
    elseif t > 100 && t < 170
        psi_1 = psi_1 + psi_1*0.010940; 
        psi_2 = psi_2 + psi_2*0.009380;
        mm = mm - 0.0045;
    elseif t >= 170
        psi_1 = psi_1 + psi_1*0.005940; 
        psi_2 = psi_2 + psi_2*0.003380;
        mm = mm - 0.0045;
    end
    
    for k = 1:K
        
        dS(k,t) = (-S(k,t-1)*(psi_1(k)*gamma*theta_1(t-1) + psi_2(k)*lambda*theta_2(t-1)))*dt;
        dA(k,t) = (S(k,t-1)*(psi_1(k)*gamma*theta_1(t-1) + psi_2(k)*lambda*theta_2(t-1))-A(k,t-1)*(sigma+alpha))*dt;
        dI(k,t) = (alpha*A(k,t-1)-mu*I(k,t-1))*dt;
        
        if k == 4
            psi_1_strict = psi_1(k);
            psi_2_strict = psi_2(k);
            if t > 100
                psi_1_strict = psi_1(k) - psi_1(k)*0.35940; 
                psi_2_strict = psi_2(k) - psi_2(k)*0.3080;
            end
            
            dS_strict = (-S(k,t-1)*(psi_1_strict*gamma*theta_1(t-1) + psi_2_strict*lambda*theta_2(t-1)))*dt;
            dA_strict = (S(k,t-1)*(psi_1_strict*gamma*theta_1(t-1) + psi_2_strict*lambda*theta_2(t-1))-A(k,t-1)*(sigma+alpha))*dt;
            dI_strict = (alpha*A(k,t-1)-mu*I(k,t-1))*dt;
            
            Atot_strict(t) = Atot_strict(t-1) - dS_strict;
            Itot_strict(t) = Itot_strict(t-1) + alpha*A(k,t-1)*dt;
        end

        %dDR(t) = (mu*I(k,t-1))*dt;

        S(k,t) = S(k,t-1) + dS(k,t);
        A(k,t) = A(k,t-1) + dA(k,t);
        I(k,t) = I(k,t-1) + dI(k,t);
        
        Atot(k,t) = Atot(k,t-1) - dS(k,t);
        Itot(k,t) = Itot(k,t-1) + alpha*A(k,t-1)*dt;

        %dR(t) = S(t) + A(t) + I(t);
        R(k,t) = 1 - S(k,t) - A(k,t) - I(k,t);
        
        R0(k,t) = (psi_1(k)*gamma*mu+psi_2(k)*lambda*alpha)/(mm*((sigma+alpha)*mu));
        
        % calculating theta_1 and theta_2
        
        Pk = k_measure(k)*k_classes(k);
    
        theta_1(t) = theta_1(t) + Pk*A(k,t);
        theta_2(t) = theta_2(t) + Pk*I(k,t);

    end
    theta_1(t) = theta_1(t)/(2*m);
    theta_2(t) = theta_2(t)/(2*m);
    
%     if t > 10
%         psi_1 = psi_1-(psi_1.*0.005); psi_2 = psi_2-(psi_2.*0.00135);
%     end
end


% syms x1 x2 x3 g l s m
% [Sx1,Sx2,Sx3] = solve(-x1*(g*x2+l*x3) == 0, g*x1*x2 - s*x2 == 0, l*x1*x3 - m*x3 ==0)

% syms t1 t2 k1 k2 g l s m a
% X = [-k1*gamma*t1-k2*lambda*t2 0 0 0;
%     -k1*gamma*t1-k2*lambda*t2 -alpha-sigma 0 0;
%     0 alpha -mu 0;
%     0 sigma mu 0];
% det(X)



% ====================================================================
% =======================GRADE/POPULATION=============================
% plot(S(1,:),k(1,:),'--','color','r'); hold on;
% plot(S(8,:),k(1,:),'--','color','b'); hold on;
% plot(S(13,:),k(1,:),'-','color','b'); hold on;
% plot(S(18,:),k(1,:),'--','color','g'); hold on;
% plot(S(20,:),k(1,:),'-','color','g')
% title('Evolutionary Gamk(2,kk)e Dynamics of Honeybees Swarm')
% xlabel('Population %')
% ylabel('Grade of the nodes')
% legend('S1','S8','S13','S18','S20')

%% =======================POPULATION/TIME==============================
% % cAI = zeros(1,T);
% % for t=1:T
% %     cAI(t) = sum(dA(1:t))+sum(dI(1:t));
% % end
% 
% figure
% t = datetime(2020,1,22) + caldays(0:T-1);
% colormap jet(21)
% jetcustom = jet(21);
% subplot(2,1,1)
% for k=1:K
%     plot(1:T,Atot(k,1:T).*(N*k_classes(k)),'-','Color',jetcustom(k,:),'LineWidth',2); hold on; %A(1:T).*(58.5*10^6)+
% end
% ylim([0 1000]);
% set(gca,'FontSize',14);
% ax = gca;
% ax.XAxis.TickValues = 0:100:T;
% ax.YAxis.TickValues = 0:200:1000;
% title('Watts-Strogatz Model: Asymptomatic Infected');
% xlabel('Time (days)','FontSize',16);
% ylabel('Number of cases','FontSize',16);
% set(gca,'DefaultTextFontSize',14);
% colormap jet(21)
% cb = colorbar; caxis([3 14]);
% cb.Label.String = 'Node degree';
% grid on; hold off;
% 
% subplot(2,1,2)
% for k=1:K
%     plot(1:T,Itot(k,1:T).*(N*k_classes(k)),'-','Color',jetcustom(k,:),'LineWidth',2); hold on; %A(1:T).*(58.5*10^6)+
% end
% ylim([0 1000]);
% set(gca,'FontSize',14);
% ax = gca;
% ax.XAxis.TickValues = 0:100:T;
% ax.YAxis.TickValues = 0:200:1000;
% title('Watts-Strogatz Model: Symptomatic Infected');
% xlabel('Time (days)','FontSize',16);
% ylabel('Number of cases','FontSize',16);
% set(gca,'DefaultTextFontSize',14);
% colormap jet(21)
% cb = colorbar; caxis([3 14]);
% cb.Label.String = 'Node degree';
% grid on; hold off;
% 
% figure
% t = datetime(2020,1,22) + caldays(0:T-1);
% colormap jet(21)
% jetcustom = jet(21);
% for k=1:K
%     plot(1:T,R(k,1:T).*(N*k_classes(k)),'-','Color',jetcustom(k,:),'LineWidth',2); hold on;
% end
% ylim([0 1000]);
% set(gca,'FontSize',14);
% ax = gca;
% ax.XAxis.TickValues = 0:100:T;
% ax.YAxis.TickValues = 0:200:1000;
% title('Watts-Strogatz Model: Removed');
% xlabel('Time (days)','FontSize',16);
% ylabel('Number of cases','FontSize',16);
% set(gca,'DefaultTextFontSize',14);
% colormap jet(21)
% cb = colorbar; caxis([3 14]);
% cb.Label.String = 'Node degree';
% grid on; hold off;


%% Seroprevalence per Region
fig = figure('Renderer', 'painters', 'Position', [10 10 1200 1000]);

titles = ['Abruzzo','Basilicata','Calabria','Campania','Emilia-Romagna','Friuli Venezia Giulia', ...
    'Lazio','Liguria','Lombardia','Marche','Molise','P.A. Bolzano','P.A. Trento', 'Piemonte', ...
    'Puglia','Sardegna','Sicilia','Toscana','Umbria',"Valle d'Aosta",'Veneto'];

t = datetime(2020,2,24) + caldays(0:T-1);
colormap hsv(21)
jetcustom = hsv(21);
% Ab,Ba,Cal,Cam,Em,Fr,La,Li,Lo,Ma,Mo,PAB,PAT,Pi,Pu,Sa,Si,To,Um,VA,Ve
for k = 1:K
    subplot(7,3,k)
    %plot(t(1:T),Itot(k,1:T).*pop(1),'-','color',[0.2 0.5 0.9][0.69 0.3 0.69],'LineWidth',3); hold on;
    %plot(t(1:T),Atot(k,1:T).*pop(1),'-','color',[0.56 0.86 0.36],'LineWidth',3);
    plot(t(1:T),Atot(k,1:T).*(N*k_classes(k))+Itot(k,1:T).*(N*k_classes(k)),'-','Color',jetcustom(k,:),'LineWidth',2); hold on;
    plot(t(1:187),cumulative_infected(k,:),'-.','Color',[0.8 0 0.8],'LineWidth',1.5);
    total = round(1.2*(Atot(k,T).*(N*k_classes(k))+Itot(k,T).*(N*k_classes(k))));
    % Fitting the seroprevalence data with exponential
%     x=(1:T)';
%     y=(cumulative_infected.*6);
%     g = fittype('a-b*exp(-c*x)');
%     f0 = fit(x,y,g,'StartPoint',[[ones(size(x)), -exp(-x)]\y; 1]);
%     xx = linspace(1,T,T);
%plot(t(1:T),f0(xx),'-.','color',[0.99 0.3 0.3],'LineWidth',2); hold on;
    xl = xline(datetime(2020,3,9),'--','color','black','LineWidth',2);
    %xl.LabelVerticalAlignment = 'middle';
    %xl.LabelHorizontalAlignment = 'center';
    %xl.FontSize = 14;
    %plot(1:T,confirmed_hubei,'r:^');
    xlim([datetime(2020,2,24) datetime(2020,10,30)]);
    ylim([0 total]);
    ax = gca;
    ax.YAxis.TickValues = 0:round(total/3):total;
    set(gca,'FontSize',14,'DefaultTextFontSize',14);
    %xlabel('Date','FontSize',16);
    %ylabel('# cases','FontSize',16);
    title(titles(k),'FontSize',12);
    grid on;
end
h = legend('Model: Total Infected','Data\_Cumulative\_Infected');

han=axes(fig,'visible','off'); 
han.Title.Visible='on';
han.XLabel.Visible='on';
han.YLabel.Visible='on';
yL=ylabel(han,'Number of cases','FontSize',16);
set(yL,'Position', [-0.05 0.5]);
xlabel(han,'Date','FontSize',16);
title(han,'Cumulative Infected per Region: CN Model vs Data','FontSize',18);
%xtickangle(45);
%xtickformat('MMM-dd');
%set(gca,'XTick', 1:size(t),'XTickLabel',t,'FontSize',14);
%ax = gca;
%ax.XAxis.TickValues = t(1:28:T);
%set(gca,'DefaultTextFontSize',14);
% AxesH    = findobj(FigH, 'Type', 'Axes');
% YLabelHC = get(AxesH, 'YLabel');
% YLabelH  = [YLabelHC{:}];
% set(YLabelH, 'String', 'Number of cases')
%YLabelH  = [YLabelHC{:}];
%h_label=ylabel('test','visible','on');
hold off;

%% SEROPREVALENCE
figure

% Fitting the seroprevalence data with exponential
k = 4; % Campania
% Calculating the multiplier: x8
% (N*k_classes(k))*0.007
% cumulative_infected(k,172)
x=(1:187)';
y=(cumulative_infected(k,:).*8)';
g = fittype('a-b*exp(-c*x)');
f0 = fit(x,y,g,'StartPoint',[[ones(size(x)), -exp(-x)]\y; 1]);
xx = linspace(1,T,T);

% Creating the actual plot
t = datetime(2020,2,24) + caldays(0:T-1);
plot(t(1:T),Atot(k,1:T).*(N*k_classes(k))+Itot(k,1:T).*(N*k_classes(k)),':','color',[0.69 0.3 0.69],'LineWidth',3); hold on;
plot(t(1:T),Atot_strict(1:T).*(N*k_classes(k))+Itot_strict(1:T).*(N*k_classes(k)),'-','color',[0.56 0.86 0.36],'LineWidth',2);
stem(t(1:187),cumulative_infected(k,:),'color',[0.69 0.3 0.69]);
%plot(t(1:T),f0(xx),'-.','color',[0.99 0.3 0.3],'LineWidth',2);
xl = xline(datetime(2020,3,9),'-.','Lockdown','color','black','LineWidth',2);
xl.LabelVerticalAlignment = 'middle';
xl.LabelHorizontalAlignment = 'center';
xl.FontSize = 14;
%plot(1:T,confirmed_hubei,'r:^');
xlim([datetime(2020,2,24) datetime(2020,10,15)]);
ylim([0 4*10^4]);
xtickangle(45);
xtickformat('MMM-dd');
%set(gca,'XTick', 1:size(t),'XTickLabel',t,'FontSize',14);
set(gca,'FontSize',14);
ax = gca;
ax.XAxis.TickValues = t(1:14:T);
title('Impact of Regional Restrictions in Campania');
xlabel('Date','FontSize',16);
ylabel('Number of cases','FontSize',16);
set(gca,'DefaultTextFontSize',14);
h = legend('Model: Total Infected','Model: Delayed Return to School','Data\_Cumulative\_Infected','Location','northwest');
grid on;
% Creating a subplot inside
axes('Position',[.7 .71 .2 .2])
box on
plot(t(1:T),R0(k,:),'-','color',[0.2 0.5 0.9],'LineWidth',2);
xlim([datetime(2020,2,24) datetime(2020,10,30)]);
ylim([0 1.5]);
xlabel('Date','FontSize',12);
ylabel('Value of R_0','FontSize',12);
grid on; hold off;


%% Individual arrays: cases per region
% % Abbruzzo
% abbruzzo_symptomatic_hospitalized = table2array(dpcregioni(1:21:3592,3));
% abbruzzo_asymptomatic_isolated = table2array(dpcregioni(1:21:3592,4));
% 
% abbruzzo_cumulative_infected = table2array(dpcregioni(1:21:3592,12));
% abbruzzo_cumulative_recovered = table2array(dpcregioni(1:21:3592,7));
% abbruzzo_cumulative_deaths = table2array(dpcregioni(1:21:3592,8));
% 
% % Basilicata
% basilicata_symptomatic_hospitalized = table2array(dpcregioni(2:21:3593,3));
% basilicata_asymptomatic_isolated = table2array(dpcregioni(2:21:3593,4));
% 
% basilicata_cumulative_infected = table2array(dpcregioni(2:21:3593,12));
% basilicata_cumulative_recovered = table2array(dpcregioni(2:21:3593,7));
% basilicata_cumulative_deaths = table2array(dpcregioni(2:21:3593,8));
% 
% % Calabria
% calabria_symptomatic_hospitalized = table2array(dpcregioni(3:21:3594,3));
% calabria_asymptomatic_isolated = table2array(dpcregioni(3:21:3594,4));
% 
% calabria_cumulative_infected = table2array(dpcregioni(3:21:3594,12));
% calabria_cumulative_recovered = table2array(dpcregioni(3:21:3594,7));
% calabria_cumulative_deaths = table2array(dpcregioni(3:21:3594,8));
% 
% % Campania
% campania_symptomatic_hospitalized = table2array(dpcregioni(4:21:3595,3));
% campania_asymptomatic_isolated = table2array(dpcregioni(4:21:3595,4));
% 
% campania_cumulative_infected = table2array(dpcregioni(4:21:3595,12));
% campania_cumulative_recovered = table2array(dpcregioni(4:21:3595,7));
% campania_cumulative_deaths = table2array(dpcregioni(4:21:3595,8));
% 
% % Emilia-Romagna
% emilia_symptomatic_hospitalized = table2array(dpcregioni(5:21:3596,3));
% emilia_asymptomatic_isolated = table2array(dpcregioni(5:21:3596,4));
% 
% emilia_cumulative_infected = table2array(dpcregioni(5:21:3596,12));
% emilia_cumulative_recovered = table2array(dpcregioni(5:21:3596,7));
% emilia_cumulative_deaths = table2array(dpcregioni(5:21:3596,8));
% 
% % Friuli-Venezia-Giulia
% friuli_symptomatic_hospitalized = table2array(dpcregioni(6:21:3597,3));
% friuli_asymptomatic_isolated = table2array(dpcregioni(6:21:3597,4));
% 
% friuli_cumulative_infected = table2array(dpcregioni(6:21:3597,12));
% friuli_cumulative_recovered = table2array(dpcregioni(6:21:3597,7));
% friuli_cumulative_deaths = table2array(dpcregioni(6:21:3597,8));
% 
% % Lazio
% lazio_symptomatic_hospitalized = table2array(dpcregioni(7:21:3598,3));
% lazio_asymptomatic_isolated = table2array(dpcregioni(7:21:3598,4));
% 
% lazio_cumulative_infected = table2array(dpcregioni(7:21:3598,12));
% lazio_cumulative_recovered = table2array(dpcregioni(7:21:3598,7));
% lazio_cumulative_deaths = table2array(dpcregioni(7:21:3598,8));
% 
% % Liguria
% liguria_symptomatic_hospitalized = table2array(dpcregioni(8:21:3599,3));
% liguria_asymptomatic_isolated = table2array(dpcregioni(8:21:3599,4));
% 
% liguria_cumulative_infected = table2array(dpcregioni(8:21:3599,12));
% liguria_cumulative_recovered = table2array(dpcregioni(8:21:3599,7));
% liguria_cumulative_deaths = table2array(dpcregioni(8:21:3599,8));
% 
% % Lombardia
% lombardia_symptomatic_hospitalized = table2array(dpcregioni(9:21:3600,3));
% lombardia_asymptomatic_isolated = table2array(dpcregioni(9:21:3600,4));
% 
% lombardia_cumulative_infected = table2array(dpcregioni(9:21:3600,12));
% lombardia_cumulative_recovered = table2array(dpcregioni(9:21:3600,7));
% lombardia_cumulative_deaths = table2array(dpcregioni(9:21:3600,8));
% 
% % Marche
% marche_symptomatic_hospitalized = table2array(dpcregioni(10:21:3601,3));
% marche_asymptomatic_isolated = table2array(dpcregioni(10:21:3601,4));
% 
% marche_cumulative_infected = table2array(dpcregioni(10:21:3601,12));
% marche_cumulative_recovered = table2array(dpcregioni(10:21:3601,7));
% marche_cumulative_deaths = table2array(dpcregioni(10:21:3601,8));
% 
% % Molise
% molise_symptomatic_hospitalized = table2array(dpcregioni(11:21:3602,3));
% molise_asymptomatic_isolated = table2array(dpcregioni(11:21:3602,4));
% 
% molise_cumulative_infected = table2array(dpcregioni(11:21:3602,12));
% molise_cumulative_recovered = table2array(dpcregioni(11:21:3602,7));
% molise_cumulative_deaths = table2array(dpcregioni(11:21:3602,8));
% 
% % PA Bolzano
% bolzano_symptomatic_hospitalized = table2array(dpcregioni(12:21:3603,3));
% bolzano_asymptomatic_isolated = table2array(dpcregioni(12:21:3603,4));
% 
% bolzano_cumulative_infected = table2array(dpcregioni(12:21:3603,12));
% bolzano_cumulative_recovered = table2array(dpcregioni(12:21:3603,7));
% bolzano_cumulative_deaths = table2array(dpcregioni(12:21:3603,8));
% 
% % PA Trento
% trento_symptomatic_hospitalized = table2array(dpcregioni(13:21:3604,3));
% trento_asymptomatic_isolated = table2array(dpcregioni(13:21:3604,4));
% 
% trento_cumulative_infected = table2array(dpcregioni(13:21:3604,12));
% trento_cumulative_recovered = table2array(dpcregioni(13:21:3604,7));
% trento_cumulative_deaths = table2array(dpcregioni(13:21:3604,8));
% 
% % Piemonte
% piemonte_symptomatic_hospitalized = table2array(dpcregioni(14:21:3605,3));
% piemonte_asymptomatic_isolated = table2array(dpcregioni(14:21:3605,4));
% 
% piemonte_cumulative_infected = table2array(dpcregioni(14:21:3605,12));
% piemonte_cumulative_recovered = table2array(dpcregioni(14:21:3605,7));
% piemonte_cumulative_deaths = table2array(dpcregioni(14:21:3605,8));
% 
% % Puglia
% puglia_symptomatic_hospitalized = table2array(dpcregioni(15:21:3606,3));
% puglia_asymptomatic_isolated = table2array(dpcregioni(15:21:3606,4));
% 
% puglia_cumulative_infected = table2array(dpcregioni(15:21:3606,12));
% puglia_cumulative_recovered = table2array(dpcregioni(15:21:3606,7));
% puglia_cumulative_deaths = table2array(dpcregioni(15:21:3606,8));
% 
% % Sardegna
% sardegna_symptomatic_hospitalized = table2array(dpcregioni(16:21:3607,3));
% sardegna_asymptomatic_isolated = table2array(dpcregioni(16:21:3607,4));
% 
% sardegna_cumulative_infected = table2array(dpcregioni(16:21:3607,12));
% sardegna_cumulative_recovered = table2array(dpcregioni(16:21:3607,7));
% sardegna_cumulative_deaths = table2array(dpcregioni(16:21:3607,8));
% 
% % Sicilia
% sicilia_symptomatic_hospitalized = table2array(dpcregioni(17:21:3608,3));
% sicilia_asymptomatic_isolated = table2array(dpcregioni(17:21:3608,4));
% 
% sicilia_cumulative_infected = table2array(dpcregioni(17:21:3608,12));
% sicilia_cumulative_recovered = table2array(dpcregioni(17:21:3608,7));
% sicilia_cumulative_deaths = table2array(dpcregioni(17:21:3608,8));
% 
% % Toscana
% toscana_symptomatic_hospitalized = table2array(dpcregioni(18:21:3609,3));
% toscana_asymptomatic_isolated = table2array(dpcregioni(18:21:3609,4));
% 
% toscana_cumulative_infected = table2array(dpcregioni(18:21:3609,12));
% toscana_cumulative_recovered = table2array(dpcregioni(18:21:3609,7));
% toscana_cumulative_deaths = table2array(dpcregioni(18:21:3609,8));
% 
% % Umbria
% umbria_symptomatic_hospitalized = table2array(dpcregioni(19:21:3610,3));
% umbria_asymptomatic_isolated = table2array(dpcregioni(19:21:3610,4));
% 
% umbria_cumulative_infected = table2array(dpcregioni(19:21:3610,12));
% umbria_cumulative_recovered = table2array(dpcregioni(19:21:3610,7));
% umbria_cumulative_deaths = table2array(dpcregioni(19:21:3610,8));
% 
% % Valle d'Aosta
% valledaosta_symptomatic_hospitalized = table2array(dpcregioni(20:21:3611,3));
% valledaosta_asymptomatic_isolated = table2array(dpcregioni(20:21:3611,4));
% 
% valledaosta_cumulative_infected = table2array(dpcregioni(20:21:3611,12));
% valledaosta_cumulative_recovered = table2array(dpcregioni(20:21:3611,7));
% valledaosta_cumulative_deaths = table2array(dpcregioni(20:21:3611,8));
% 
% % Veneto
% veneto_symptomatic_hospitalized = table2array(dpcregioni(21:21:3612,3));
% veneto_asymptomatic_isolated = table2array(dpcregioni(21:21:3612,4));
% 
% veneto_cumulative_infected = table2array(dpcregioni(21:21:3612,12));
% veneto_cumulative_recovered = table2array(dpcregioni(21:21:3612,7));
% veneto_cumulative_deaths = table2array(dpcregioni(21:21:3612,8));